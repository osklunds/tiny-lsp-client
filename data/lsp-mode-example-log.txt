@credits: Thank you https://github.com/emacs-lsp/lsp-mode for being a great
reference


[Trace - 11:06:26 AM] Sending request 'initialize - (80)'.
Params: {
  "processId": 49154,
  "rootPath": "/home/oskar/own_repos/tiny-lsp-client",
  "clientInfo": {
    "name": "emacs",
    "version": "GNU Emacs 29.4 (build 2, x86_64-suse-linux-gnu, GTK+ Version 3.24.43, cairo version 1.18.2)"
  },
  "rootUri": "file:///home/oskar/own_repos/tiny-lsp-client",
  "capabilities": {
    "general": {
      "positionEncodings": [
        "utf-32",
        "utf-16"
      ]
    },
    "workspace": {
      "workspaceEdit": {
        "documentChanges": true,
        "resourceOperations": [
          "create",
          "rename",
          "delete"
        ]
      },
      "applyEdit": true,
      "symbol": {
        "symbolKind": {
          "valueSet": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26
          ]
        }
      },
      "executeCommand": {
        "dynamicRegistration": false
      },
      "workspaceFolders": true,
      "configuration": true,
      "fileOperations": {
        "didCreate": false,
        "willCreate": false,
        "didRename": true,
        "willRename": true,
        "didDelete": false,
        "willDelete": false
      }
    },
    "textDocument": {
      "declaration": {
        "dynamicRegistration": true,
        "linkSupport": true
      },
      "definition": {
        "dynamicRegistration": true,
        "linkSupport": true
      },
      "references": {
        "dynamicRegistration": true
      },
      "implementation": {
        "dynamicRegistration": true,
        "linkSupport": true
      },
      "typeDefinition": {
        "dynamicRegistration": true,
        "linkSupport": true
      },
      "synchronization": {
        "willSave": true,
        "didSave": true,
        "willSaveWaitUntil": true
      },
      "documentSymbol": {
        "symbolKind": {
          "valueSet": [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20,
            21,
            22,
            23,
            24,
            25,
            26
          ]
        },
        "hierarchicalDocumentSymbolSupport": true
      },
      "formatting": {
        "dynamicRegistration": true
      },
      "rangeFormatting": {
        "dynamicRegistration": true
      },
      "onTypeFormatting": {
        "dynamicRegistration": true
      },
      "rename": {
        "dynamicRegistration": true,
        "prepareSupport": true
      },
      "codeAction": {
        "dynamicRegistration": true,
        "isPreferredSupport": true,
        "codeActionLiteralSupport": {
          "codeActionKind": {
            "valueSet": [
              "",
              "quickfix",
              "refactor",
              "refactor.extract",
              "refactor.inline",
              "refactor.rewrite",
              "source",
              "source.organizeImports"
            ]
          }
        },
        "resolveSupport": {
          "properties": [
            "edit",
            "command"
          ]
        },
        "dataSupport": true
      },
      "completion": {
        "completionItem": {
          "snippetSupport": false,
          "documentationFormat": [
            "markdown",
            "plaintext"
          ],
          "resolveAdditionalTextEditsSupport": true,
          "insertReplaceSupport": true,
          "deprecatedSupport": true,
          "resolveSupport": {
            "properties": [
              "documentation",
              "detail",
              "additionalTextEdits",
              "command"
            ]
          },
          "insertTextModeSupport": {
            "valueSet": [
              1,
              2
            ]
          }
        },
        "contextSupport": true,
        "dynamicRegistration": true
      },
      "signatureHelp": {
        "signatureInformation": {
          "parameterInformation": {
            "labelOffsetSupport": true
          }
        },
        "dynamicRegistration": true
      },
      "documentLink": {
        "dynamicRegistration": true,
        "tooltipSupport": true
      },
      "hover": {
        "contentFormat": [
          "markdown",
          "plaintext"
        ],
        "dynamicRegistration": true
      },
      "foldingRange": {
        "dynamicRegistration": true
      },
      "selectionRange": {
        "dynamicRegistration": true
      },
      "callHierarchy": {
        "dynamicRegistration": false
      },
      "typeHierarchy": {
        "dynamicRegistration": true
      },
      "publishDiagnostics": {
        "relatedInformation": true,
        "tagSupport": {
          "valueSet": [
            1,
            2
          ]
        },
        "versionSupport": true
      },
      "linkedEditingRange": {
        "dynamicRegistration": true
      }
    },
    "window": {
      "workDoneProgress": true,
      "showDocument": {
        "support": true
      }
    },
    "experimental": {
      "snippetTextEdit": null
    }
  },
  "initializationOptions": {
    "diagnostics": {
      "enable": true,
      "enableExperimental": false,
      "disabled": [],
      "warningsAsHint": [],
      "warningsAsInfo": []
    },
    "imports": {
      "granularity": {
        "enforce": false,
        "group": "crate"
      },
      "group": true,
      "merge": {
        "glob": true
      },
      "prefix": "plain"
    },
    "lruCapacity": null,
    "checkOnSave": {
      "enable": true,
      "command": "check",
      "extraArgs": [],
      "allTargets": true,
      "features": [],
      "overrideCommand": []
    },
    "files": {
      "exclude": [],
      "watcher": "client",
      "excludeDirs": []
    },
    "cargo": {
      "allFeatures": false,
      "noDefaultFeatures": false,
      "features": [],
      "target": null,
      "runBuildScripts": true,
      "loadOutDirsFromCheck": true,
      "autoreload": true,
      "useRustcWrapperForBuildScripts": true,
      "unsetTest": []
    },
    "rustfmt": {
      "extraArgs": [],
      "overrideCommand": [],
      "rangeFormatting": {
        "enable": false
      }
    },
    "lens": {
      "debug": {
        "enable": true
      },
      "enable": true,
      "implementations": {
        "enable": true
      },
      "references": {
        "adt": {
          "enable": false
        },
        "enumVariant": {
          "enable": false
        },
        "method": {
          "enable": false
        },
        "trait": {
          "enable": false
        }
      },
      "run": {
        "enable": true
      }
    },
    "inlayHints": {
      "bindingModeHints": false,
      "chainingHints": false,
      "closingBraceHints": {
        "enable": true,
        "minLines": 25
      },
      "closureReturnTypeHints": false,
      "lifetimeElisionHints": {
        "enable": "never",
        "useParameterNames": false
      },
      "maxLength": null,
      "parameterHints": false,
      "reborrowHints": "never",
      "renderColons": true,
      "typeHints": {
        "enable": false,
        "hideClosureInitialization": false,
        "hideNamedConstructor": false
      }
    },
    "completion": {
      "addCallParenthesis": false,
      "addCallArgumentSnippets": true,
      "postfix": {
        "enable": true
      },
      "autoimport": {
        "enable": true
      },
      "autoself": {
        "enable": true
      }
    },
    "callInfo": {
      "full": true
    },
    "procMacro": {
      "enable": true
    },
    "rustcSource": null,
    "linkedProjects": [],
    "highlighting": {
      "strings": true
    },
    "experimental": {
      "procAttrMacros": true
    },
    "workspace": {
      "symbol": {
        "search": {
          "kind": "all_symbols"
        }
      }
    }
  },
  "workDoneToken": "1"
}


[Trace - 11:06:26 AM] Received response 'initialize - (80)' in 48ms.
Result: {
  "capabilities": {
    "positionEncoding": "utf-32",
    "textDocumentSync": {
      "openClose": true,
      "change": 2,
      "save": null
    },
    "selectionRangeProvider": true,
    "hoverProvider": true,
    "completionProvider": {
      "resolveProvider": true,
      "triggerCharacters": [
        ":",
        ".",
        "'",
        "("
      ],
      "completionItem": {
        "labelDetailsSupport": null
      }
    },
    "signatureHelpProvider": {
      "triggerCharacters": [
        "(",
        ",",
        "<"
      ]
    },
    "definitionProvider": true,
    "typeDefinitionProvider": true,
    "implementationProvider": true,
    "referencesProvider": true,
    "documentHighlightProvider": true,
    "documentSymbolProvider": true,
    "workspaceSymbolProvider": true,
    "codeActionProvider": {
      "codeActionKinds": [
        "",
        "quickfix",
        "refactor",
        "refactor.extract",
        "refactor.inline",
        "refactor.rewrite"
      ],
      "resolveProvider": true
    },
    "codeLensProvider": {
      "resolveProvider": true
    },
    "documentFormattingProvider": true,
    "documentRangeFormattingProvider": null,
    "documentOnTypeFormattingProvider": {
      "firstTriggerCharacter": "=",
      "moreTriggerCharacter": [
        ".",
        ">",
        "{",
        "("
      ]
    },
    "renameProvider": {
      "prepareProvider": true
    },
    "foldingRangeProvider": true,
    "declarationProvider": true,
    "workspace": {
      "workspaceFolders": {
        "supported": true,
        "changeNotifications": true
      },
      "fileOperations": {
        "willRename": {
          "filters": [
            {
              "scheme": "file",
              "pattern": {
                "glob": "**/*.rs",
                "matches": "file"
              }
            },
            {
              "scheme": "file",
              "pattern": {
                "glob": "**",
                "matches": "folder"
              }
            }
          ]
        }
      }
    },
    "callHierarchyProvider": true,
    "semanticTokensProvider": {
      "legend": {
        "tokenTypes": [
          "comment",
          "decorator",
          "enumMember",
          "enum",
          "function",
          "interface",
          "keyword",
          "macro",
          "method",
          "namespace",
          "number",
          "operator",
          "parameter",
          "property",
          "string",
          "struct",
          "typeParameter",
          "variable",
          "angle",
          "arithmetic",
          "attributeBracket",
          "attribute",
          "bitwise",
          "boolean",
          "brace",
          "bracket",
          "builtinAttribute",
          "builtinType",
          "character",
          "colon",
          "comma",
          "comparison",
          "constParameter",
          "const",
          "deriveHelper",
          "derive",
          "dot",
          "escapeSequence",
          "formatSpecifier",
          "generic",
          "invalidEscapeSequence",
          "label",
          "lifetime",
          "logical",
          "macroBang",
          "parenthesis",
          "procMacro",
          "punctuation",
          "selfKeyword",
          "selfTypeKeyword",
          "semicolon",
          "static",
          "toolModule",
          "typeAlias",
          "union",
          "unresolvedReference"
        ],
        "tokenModifiers": [
          "async",
          "documentation",
          "declaration",
          "static",
          "defaultLibrary",
          "associated",
          "attribute",
          "callable",
          "constant",
          "consuming",
          "controlFlow",
          "crateRoot",
          "injected",
          "intraDocLink",
          "library",
          "macro",
          "mutable",
          "procMacro",
          "public",
          "reference",
          "trait",
          "unsafe"
        ]
      },
      "range": true,
      "full": {
        "delta": true
      }
    },
    "inlayHintProvider": {
      "resolveProvider": true
    },
    "experimental": {
      "externalDocs": true,
      "hoverRange": true,
      "joinLines": true,
      "matchingBrace": true,
      "moveItem": true,
      "onEnter": true,
      "openCargoToml": true,
      "parentModule": true,
      "runnables": {
        "kinds": [
          "cargo"
        ]
      },
      "ssr": true,
      "workspaceSymbolScopeKindFiltering": true
    }
  },
  "serverInfo": {
    "name": "rust-analyzer",
    "version": "1.80.0 (0514789 2024-07-21)"
  }
}

[Trace - 11:06:26 AM] Sending notification 'initialized'.
Params: {}


[Trace - 11:06:26 AM] Sending notification 'textDocument/didOpen'.
Params: {
  "textDocument": {
    "uri": "file:///home/oskar/own_repos/tiny-lsp-client/src/main.rs",
    "languageId": "rust",
    "version": 63,
    "text": "\nfn main() {\n    println!(\"Hello, world!\");\n    other_fun();\n}\n\nfn other_fun() {\n    println!(\"oskar: {:?}\", \"hej\");\n}\n\n"
  }
}


[Trace - 11:08:04 AM] Sending request 'textDocument/definition - (82)'.
Params: {
  "textDocument": {
    "uri": "file:///home/oskar/own_repos/tiny-lsp-client/src/main.rs"
  },
  "position": {
    "line": 3,
    "character": 4
  }
}


[Trace - 11:08:04 AM] Received response 'textDocument/definition - (82)' in 1ms.
Result: [
  {
    "originSelectionRange": {
      "start": {
        "line": 3,
        "character": 4
      },
      "end": {
        "line": 3,
        "character": 13
      }
    },
    "targetUri": "file:///home/oskar/own_repos/tiny-lsp-client/src/main.rs",
    "targetRange": {
      "start": {
        "line": 6,
        "character": 0
      },
      "end": {
        "line": 8,
        "character": 1
      }
    },
    "targetSelectionRange": {
      "start": {
        "line": 6,
        "character": 3
      },
      "end": {
        "line": 6,
        "character": 12
      }
    }
  }
]

[Trace - 07:32:14 PM] Sending notification 'textDocument/didChange'.
Params: {
  "textDocument": {
    "uri": "file:///home/oskar/own_repos/tiny-lsp-client/src/message.rs",
    "version": 301
  },
  "contentChanges": [
    {
      "range": {
        "start": {
          "line": 27,
          "character": 0
        },
        "end": {
          "line": 27,
          "character": 1
        }
      },
      "rangeLength": 1,
      "text": ""
    }
  ]
}


[Trace - 08:34:06 PM] Sending request 'textDocument/completion - (1032)'.
Params: {
  "textDocument": {
    "uri": "file:///home/oskar/own_repos/tiny-lsp-client/src/server.rs"
  },
  "position": {
    "line": 458,
    "character": 9
  },
  "context": {
    "triggerKind": 1
  }
}

[Trace - 08:34:06 PM] Received response 'textDocument/completion - (1032)' in 193ms.
Result: {
  "isIncomplete": true,
  "items": [
    {
      "label": "rust_2021 (use core::prelude::rust_2021)",
      "kind": 9,
      "documentation": {
        "kind": "markdown",
        "value": "The 2021 version of the core prelude.\n\nSee the [module-level documentation](self) for more."
      },
      "deprecated": null,
      "sortText": "80000000",
      "filterText": "rust_2021",
      "textEdit": {
        "newText": "rust_2021",
        "insert": {
          "start": {
            "line": 458,
            "character": 8
          },
          "end": {
            "line": 458,
            "character": 9
          }
        },
        "replace": {
          "start": {
            "line": 458,
            "character": 8
          },
          "end": {
            "line": 458,
            "character": 9
          }
        }
      },
      "additionalTextEdits": [],
      "data": {
        "position": {
          "textDocument": {
            "uri": "file:///home/oskar/own_repos/tiny-lsp-client/src/server.rs"
          },
          "position": {
            "line": 458,
            "character": 9
          }
        },
        "imports": [
          {
            "full_import_path": "core::prelude::rust_2021",
            "imported_name": "rust_2021"
          }
        ],
        "version": 7
      }
    },
    {
      "label": "R10 (use libc::R10)",
      "kind": 21,
      "detail": "i32",
      "deprecated": null,
      "sortText": "80000000",
      "filterText": "R10",
      "textEdit": {
        "newText": "R10",
        "insert": {
          "start": {
            "line": 458,
            "character": 8
          },
          "end": {
            "line": 458,
            "character": 9
          }
        },
        "replace": {
          "start": {
            "line": 458,
            "character": 8
          },
          "end": {
            "line": 458,
            "character": 9
          }
        }
      },
      "additionalTextEdits": [],
      "data": {
        "position": {
          "textDocument": {
            "uri": "file:///home/oskar/own_repos/tiny-lsp-client/src/server.rs"
          },
          "position": {
            "line": 458,
            "character": 9
          }
        },
        "imports": [
          {
            "full_import_path": "libc::R10",
            "imported_name": "R10"
          }
        ],
        "version": 7
      }
    },

    {
      "label": "Response",
      "kind": 22,
      "detail": "Response",
      "deprecated": null,
      "sortText": "7fffffff",
      "filterText": "Response",
      "textEdit": {
        "newText": "Response",
        "insert": {
          "start": {
            "line": 458,
            "character": 8
          },
          "end": {
            "line": 458,
            "character": 9
          }
        },
        "replace": {
          "start": {
            "line": 458,
            "character": 8
          },
          "end": {
            "line": 458,
            "character": 9
          }
        }
      },
      "additionalTextEdits": []
    },
