
* tiny-lsp-client

* todos:

dir with test projects/repos

for tests, have one .el file per test case. It loads the rust module, runs initialize, starts some LSP server, sends some requests and asserts responses. If fail, either due to crash or enexpected value, maybe then and only then error code is non-0? Can check error code in .sh script. Can have as arg to sh both .el file to run and whether to have gui. gui useful to manually debug, non-gui good for regression testing.

- phase 1: basics + find definition
  - in general, compare against lsp-mode's didChange
    - After rename, there are diffs and STDERR
  - enable and fix warnings
  - crash if vdiff on deleted file. The file of course doesn't reside on disk. But why is didOpen sent?
    - also if C-x C-f on new file.
    - add test for the above
- phase 2: erlang
- phase 3: completions
- phase 4: make public
  - architecture
  - error strategy
  - logging
  - test strategy
  - licenses and attribution
- whenever
  - clean up connection.rs and lib.rs
  - Improve connection.rs debug print to be consistent and contain more info
